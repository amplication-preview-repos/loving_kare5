/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { EventWhereUniqueInput } from "../../event/base/EventWhereUniqueInput";
import { EventListRelationFilter } from "../../event/base/EventListRelationFilter";
import { HolidayListRelationFilter } from "../../holiday/base/HolidayListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { EnumCalendarTypeField } from "./EnumCalendarTypeField";

@InputType()
class CalendarWhereInput {
  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  date?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EventWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EventWhereUniqueInput)
  @IsOptional()
  @Field(() => EventWhereUniqueInput, {
    nullable: true,
  })
  event?: EventWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => EventListRelationFilter,
  })
  @ValidateNested()
  @Type(() => EventListRelationFilter)
  @IsOptional()
  @Field(() => EventListRelationFilter, {
    nullable: true,
  })
  events?: EventListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => HolidayListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HolidayListRelationFilter)
  @IsOptional()
  @Field(() => HolidayListRelationFilter, {
    nullable: true,
  })
  holidays?: HolidayListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    enum: EnumCalendarTypeField,
  })
  @IsEnum(EnumCalendarTypeField)
  @IsOptional()
  @Field(() => EnumCalendarTypeField, {
    nullable: true,
  })
  typeField?: "Option1";
}

export { CalendarWhereInput as CalendarWhereInput };
